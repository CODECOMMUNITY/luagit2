--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "Repository".
--
-- <br />
module("Repository")

--- Create a new Repository object
--
-- @name Repository.open
-- @param path Must be of type `string`.
-- @return <code>Repository</code> or <code>nil</code> on error.
-- @return Error string.
function Repository.open(path)
end

--- Create a new Repository object
--
-- @name Repository.init
-- @param path Must be of type `string`.
-- @param is_bare Must be of type `integer`.
-- @return <code>Repository</code> or <code>nil</code> on error.
-- @return Error string.
function Repository.init(path, is_bare)
end

--- object method.
--
-- @name Repository:head
-- @return <code>Reference</code> or <code>nil</code> on error.
-- @return Error string.
function Repository:head()
end

--- object method.
--
-- @name Repository:head_detached
-- @return <code>boolean</code>.
function Repository:head_detached()
end

--- object method.
--
-- @name Repository:head_orphan
-- @return <code>boolean</code>.
function Repository:head_orphan()
end

--- object method.
--
-- @name Repository:is_empty
-- @return <code>boolean</code>.
function Repository:is_empty()
end

--- object method.
--
-- @name Repository:is_bare
-- @return <code>boolean</code>.
function Repository:is_bare()
end

--- object method.
--
-- @name Repository:path
-- @return <code>string</code>.
function Repository:path()
end

--- object method.
--
-- @name Repository:workdir
-- @return <code>string</code>.
function Repository:workdir()
end

--- object method.
--
-- @name Repository:set_workdir
-- @param workdir Must be of type `string`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Repository:set_workdir(workdir)
end

--- object method.
--
-- @name Repository:config
-- @return <code>Config</code> or <code>nil</code> on error.
-- @return Error string.
function Repository:config()
end

--- object method.
--
-- @name Repository:set_config
-- @param config Must be of type `Config`.
function Repository:set_config(config)
end

--- object method.
--
-- @name Repository:odb
-- @return <code>ODB</code> or <code>nil</code> on error.
-- @return Error string.
function Repository:odb()
end

--- object method.
--
-- @name Repository:set_odb
-- @param odb Must be of type `ODB`.
function Repository:set_odb(odb)
end

--- object method.
--
-- @name Repository:index
-- @return <code>Index</code> or <code>nil</code> on error.
-- @return Error string.
function Repository:index()
end

--- object method.
--
-- @name Repository:set_index
-- @param index Must be of type `Index`.
function Repository:set_index(index)
end

