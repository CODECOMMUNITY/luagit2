--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "Index".
--
-- <br />
module("Index")

--- Create a new Index object
--
-- @name Index.bare
-- @param index_path Must be of type `string`.
-- @return <code>Index</code> or <code>nil</code> on error.
-- @return Error string.
function Index.bare(index_path)
end

--- object method.
--
-- @name Index:clear
function Index:clear()
end

--- object method.
--
-- @name Index:read
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:read()
end

--- object method.
--
-- @name Index:write
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:write()
end

--- object method.
--
-- @name Index:find
-- @param path Must be of type `string`.
-- @return <code>integer</code>.
function Index:find(path)
end

--- object method.
--
-- @name Index:uniq
function Index:uniq()
end

--- object method.
--
-- @name Index:add
-- @param path Must be of type `string`.
-- @param stage Must be of type `integer`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:add(path, stage)
end

--- object method.
--
-- @name Index:add2
-- @param source_entry Must be of type `IndexEntry`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:add2(source_entry)
end

--- object method.
--
-- @name Index:append
-- @param path Must be of type `string`.
-- @param stage Must be of type `integer`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:append(path, stage)
end

--- object method.
--
-- @name Index:append2
-- @param source_entry Must be of type `IndexEntry`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:append2(source_entry)
end

--- object method.
--
-- @name Index:remove
-- @param position Must be of type `integer`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:remove(position)
end

--- object method.
--
-- @name Index:get
-- @param n Must be of type `integer`.
-- @return <code>IndexEntry</code>.
function Index:get(n)
end

--- object method.
--
-- @name Index:entrycount
-- @return <code>integer</code>.
function Index:entrycount()
end

--- object method.
--
-- @name Index:entrycount_unmerged
-- @return <code>integer</code>.
function Index:entrycount_unmerged()
end

--- object method.
--
-- @name Index:get_unmerged_bypath
-- @param path Must be of type `string`.
-- @return <code>IndexEntryUnmerged</code>.
function Index:get_unmerged_bypath(path)
end

--- object method.
--
-- @name Index:get_unmerged_byindex
-- @param n Must be of type `integer`.
-- @return <code>IndexEntryUnmerged</code>.
function Index:get_unmerged_byindex(n)
end

--- object method.
--
-- @name Index:read_tree
-- @param tree Must be of type `Tree`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Index:read_tree(tree)
end

