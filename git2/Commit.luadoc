--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "Commit".
--
-- Extends <a href="Object.html">Object</a><br />
-- <br />
module("Commit")

--- Create a new Commit object
--
-- @name Commit.lookup
-- @param repo Must be of type `Repository`.
-- @param id Must be of type `OID`.
-- @return <code>Commit</code> or <code>nil</code> on error.
-- @return Error string.
function Commit.lookup(repo, id)
end

--- module function
--
-- @name Commit.create
-- @param oid Must be of type `OID`.
-- @param repo Must be of type `Repository`.
-- @param update_ref Must be of type `string`.
-- @param author Must be of type `Signature`.
-- @param committer Must be of type `Signature`.
-- @param message_encoding Must be of type `string`.
-- @param message Must be of type `string`.
-- @param tree Must be of type `Tree`.
-- @param parent Must be of type `Commit`.
-- @return <code>true</code> if no error.
-- @return Error string.
function Commit.create(oid, repo, update_ref, author, committer, message_encoding, message, tree, parent)
end

--- object method.
--
-- @name Commit:id
-- @return <code>OID</code>.
function Commit:id()
end

--- object method.
--
-- @name Commit:message_encoding
-- @return <code>string</code>.
function Commit:message_encoding()
end

--- object method.
--
-- @name Commit:message
-- @return <code>string</code>.
function Commit:message()
end

--- object method.
--
-- @name Commit:time
-- @return <code>integer</code>.
function Commit:time()
end

--- object method.
--
-- @name Commit:time_offset
-- @return <code>integer</code>.
function Commit:time_offset()
end

--- object method.
--
-- @name Commit:committer
-- @return <code>Signature</code>.
function Commit:committer()
end

--- object method.
--
-- @name Commit:author
-- @return <code>Signature</code>.
function Commit:author()
end

--- object method.
--
-- @name Commit:tree
-- @return <code>Tree</code> or <code>nil</code> on error.
-- @return Error string.
function Commit:tree()
end

--- object method.
--
-- @name Commit:parentcount
-- @return <code>integer</code>.
function Commit:parentcount()
end

--- object method.
--
-- @name Commit:parent
-- @param n Must be of type `integer`.
-- @return <code>Commit</code> or <code>nil</code> on error.
-- @return Error string.
function Commit:parent(n)
end

--- Destroy this object.
--
-- @name Object:free
function Object:free()
end

--- object method.
--
-- @name Object:id
-- @return <code>OID</code>.
function Object:id()
end

--- object method.
--
-- @name Object:type
-- @return <code>string</code>.
function Object:type()
end

--- object method.
--
-- @name Object:owner
-- @return <code>Repository</code>.
function Object:owner()
end

